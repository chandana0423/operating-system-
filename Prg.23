



  

class GFG  

{ 

     

   

    static void firstFit(int []blockSize, int m,  

                         int []processSize, int n) 

    { 

        

        

        int []allocation = new int[n]; 

      

        // Initially no block is assigned to any process 

        for (int i = 0; i < allocation.Length; i++) 

            allocation[i] = -1; 

      

        

        

        for (int i = 0; i < n; i++) 

        { 

            for (int j = 0; j < m; j++) 

            { 

                if (blockSize[j] >= processSize[i]) 

                { 

                    // allocate block j to p[i] process 

                    allocation[i] = j; 

      

                    // Reduce available memory in this block. 

                    blockSize[j] -= processSize[i]; 

      

                    break; 

                } 

            } 

        } 

      

    Console.WriteLine("

Process No.	Process Size	Block no.");        
for (int i = 0; i < n; i++) 

        { 

            Console.Write(" " + (i+1) + " " +  

                          processSize[i] + " "); 

            if (allocation[i] != -1) 

            Console.Write(allocation[i] + 1); 

            else

                Console.Write("Not Allocated"); 

            Console.WriteLine(); 

        } 

    } 

      

    // Driver Code 

    public static void Main() 

    { 

        int []blockSize = {100, 500, 200, 300, 600}; 

        int []processSize = {212, 417, 112, 426}; 

        int m = blockSize.Length; 

        int n = processSize.Length; 

          

        firstFit(blockSize, m, processSize, n); 

    } 

} 
 














 














